## 端口
server.port=8686
# Spring boot application
spring.application.name=dubbo-auto-configure-consumer-sample

# Dubbo Application
## The default value of dubbo.application.name is ${spring.application.name}
## dubbo.application.name=${spring.application.name}

# Dubbo Registry
#dubbo.registry.address=zookeeper://127.0.0.1:2181
dubbo.registry.protocol=zookeeper
dubbo.registry.address=127.0.0.1:2181

## DemoService version
demo.service.version=1.0.0

# Seata
seata.registry.type=zk
seata.registry.zk.cluster=default
seata.registry.zk.connect-timeout=2000
seata.registry.zk.server-addr=127.0.0.1:2181
seata.registry.zk.session-timeout=6000
seata.config.type=zk
seata.config.zk.connect-timeout=2000
seata.config.zk.server-addr=127.0.0.1:2181
seata.config.zk.session-timeout=6000
#seata.config.type=file
#seata.config.file.name=file.conf
# 服务启动时加载配置，tx-service-group对应的值"my_test_tx_group"即为一个事务分组名，若不配置，默认获取属性spring.application.name的值+"-seata-service-group"
# 拿到事务分组名"my_test_tx_group"拼接成"service.vgroupMapping.my_test_tx_group"查找TC集群名clusterName为"default"
# 拼接"service."+clusterName+".grouplist"找到真实TC服务地址127.0.0.1:8091
seata.tx-service-group=my_test_tx_group

# Kafka
spring.kafka.bootstrap-servers=127.0.0.1:9092
spring.kafka.producer.retries=2
spring.kafka.producer.acks=1
spring.kafka.producer.batch-size=16384
spring.kafka.producer.properties.linger.ms=5
spring.kafka.producer.buffer-memory=33554432
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.group-id=foo
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer