# 端口
server.port=8787
# Spring boot application
spring.application.name=dubbo-auto-configuration-provider-demo
# Base packages to scan Dubbo Component: @org.apache.dubbo.config.annotation.Service
dubbo.scan.base-packages=com.sevenfish.service

# Dubbo Application
## The default value of dubbo.application.name is ${spring.application.name}
## dubbo.application.name=${spring.application.name}

# Dubbo Protocol
dubbo.protocol.name=dubbo
# Random port
dubbo.protocol.port=-1

# Dubbo Registry
#dubbo.registry.address=zookeeper://127.0.0.1:2181
dubbo.registry.protocol=zookeeper
dubbo.registry.address=127.0.0.1:2181

# DemoService version
demo.service.version=1.0.0

# Dubbo thread pool size
#dubbo.protocol.threads=10

# Multiple Database
spring.datasource.dynamic.seata=true
spring.datasource.dynamic.primary=master_1
spring.datasource.dynamic.datasource.master_1.url=jdbc:mysql://127.0.0.1:3306/test_account?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC
spring.datasource.dynamic.datasource.master_1.username=root
spring.datasource.dynamic.datasource.master_1.password=root
spring.datasource.dynamic.datasource.master_1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.dynamic.datasource.master_2.url=jdbc:mysql://127.0.0.1:3306/test_order?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC
spring.datasource.dynamic.datasource.master_2.username=root
spring.datasource.dynamic.datasource.master_2.password=root
spring.datasource.dynamic.datasource.master_2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.dynamic.datasource.master_3.url=jdbc:mysql://127.0.0.1:3306/test_storage?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC
spring.datasource.dynamic.datasource.master_3.username=root
spring.datasource.dynamic.datasource.master_3.password=root
spring.datasource.dynamic.datasource.master_3.driver-class-name=com.mysql.cj.jdbc.Driver

# Seata
seata.registry.type=zk
seata.registry.zk.cluster=default
seata.registry.zk.connect-timeout=2000
seata.registry.zk.server-addr=127.0.0.1:2181
seata.registry.zk.session-timeout=6000
seata.config.type=zk
seata.config.zk.connect-timeout=2000
seata.config.zk.server-addr=127.0.0.1:2181
seata.config.zk.session-timeout=6000
#seata.config.type=file
#seata.config.file.name=file.conf
# 服务启动时加载配置，tx-service-group对应的值"my_test_tx_group"即为一个事务分组名，
# 若不配置，默认获取属性spring.application.name的值+"-seata-service-group"
# 拿到事务分组名"my_test_tx_group"拼接成"service.vgroupMapping.my_test_tx_group"查找TC集群名clusterName为"default"
# 拼接"service."+clusterName+".grouplist"找到真实TC服务地址127.0.0.1:8091
seata.tx-service-group=my_test_tx_group

# Redis config
spring.redis.database=0
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=
spring.redis.timeout=6000

# Kafka
spring.kafka.bootstrap-servers=127.0.0.1:9092
spring.kafka.producer.retries=2
spring.kafka.producer.acks=1
spring.kafka.producer.batch-size=16384
spring.kafka.producer.properties.linger.ms=5
spring.kafka.producer.buffer-memory=33554432
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.group-id=foo
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

### 调度中心部署跟地址 [选填]：如调度中心集群部署存在多个地址则用逗号分隔。执行器将会使用该地址进行"执行器心跳注册"和"任务结果回调"；为空则关闭自动注册；
xxl.job.admin.addresses=http://127.0.0.1:8888/xxl-job-admin
### 执行器通讯TOKEN [选填]：非空时启用；
xxl.job.accessToken=
### 执行器AppName [选填]：执行器心跳注册分组依据；为空则关闭自动注册
xxl.job.executor.appname=xxl-job-executor-sample
### 执行器注册 [选填]：优先使用该配置作为注册地址，为空时使用内嵌服务 ”IP:PORT“ 作为注册地址。从而更灵活的支持容器类型执行器动态IP和动态映射端口问题。
xxl.job.executor.address=
### 执行器IP [选填]：默认为空表示自动获取IP，多网卡时可手动设置指定IP，该IP不会绑定Host仅作为通讯实用；地址信息用于 "执行器注册" 和 "调度中心请求并触发任务"；
xxl.job.executor.ip=
### 执行器端口号 [选填]：小于等于0则自动获取；默认端口为9999，单机部署多个执行器时，注意要配置不同执行器端口；
xxl.job.executor.port=9999
### 执行器运行日志文件存储磁盘路径 [选填] ：需要对该路径拥有读写权限；为空则使用默认路径；
xxl.job.executor.logpath=/data/applogs/xxl-job/jobhandler
### 执行器日志文件保存天数 [选填] ： 过期日志自动清理, 限制值大于等于3时生效; 否则, 如-1, 关闭自动清理功能；
xxl.job.executor.logretentiondays=30